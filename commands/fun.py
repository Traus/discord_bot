import random
import re
from datetime import datetime, timedelta
from time import sleep

import discord
import requests
from discord.ext import commands
from discord.utils import get

from constants import channels, tavern_emoji, roles
from database.stat import add_value, get_value
from init_bot import bot
from utils.format import box, send_by_bot
from utils.guild_utils import get_members_by_role, get_bot_avatar, create_and_send_slap, has_immune, \
    set_permissions, get_renferenced_author, is_traus, quote_renferenced_message, get_reputation_income
from utils.states import table_turn_over
from utils.tenor_gifs import find_gif


class FunCommands(commands.Cog, name='–í–µ—Å–µ–ª—å–µ'):
    """–†–æ—Ñ–ª—ã –∏ –ø–∞—Å—Ö–∞–ª–∫–∏"""

    @commands.command(name='–æ—Å—É–∂–¥–∞—é', help='–û—Å—É–¥–∏—Ç—å!')
    async def blame(self, ctx):
        message = await quote_renferenced_message(ctx)
        await send_by_bot(ctx, message, file=discord.File('files/media/tom.jpg'), delete=True)

    @commands.command(name='–æ–¥–æ–±—Ä—è—é', help='–û–¥–æ–±—Ä–∏—Ç—å!')
    async def approve(self, ctx):
        message = await quote_renferenced_message(ctx)
        search_term = 'approve'
        limit = 10
        await send_by_bot(ctx, message, find_gif(search_term, limit), delete=True)

    @commands.command(name='—à–∞–ø–∞–ª–∞—Ö', help='–í—Ç–∞—â–∏—Ç—å')
    async def slap(self, ctx, members: commands.Greedy[discord.Member], bot: str = None):
        await ctx.message.delete()

        from_bot = bot is not None and bot == 'bot'
        if not members:
            author = await get_renferenced_author(ctx)
            if author is not None:
                members = [author]
            else:
                members = [ctx.author]

        add_value('slap', number=len(members))

        for member in set(members):
            avatar_from = ctx.author.avatar_url
            avatar_to = member.avatar_url

            if has_immune(member) and not from_bot:
                await ctx.send(box(f'–£ {member.display_name} –∏–º–º—É–Ω–∏—Ç–µ—Ç!'))
                continue

            if from_bot:
                avatar_from = get_bot_avatar(ctx)

            gif = is_traus(ctx, ctx.author) or random.randint(0, 100) >= 95
            await create_and_send_slap(ctx, avatar_from, avatar_to, gif=gif, from_bot=from_bot)

    @commands.command(name='–∞–≤–∞—Ç–∞—Ä', help='–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–≤–∞—Ç–∞—Ä–∫—É')
    async def avatar(self, ctx, member: discord.Member = None):
        await ctx.message.delete()

        if member is None:
            member = ctx.author
        await ctx.send(member.avatar_url)

    @commands.command(name='—Å–µ–∫—Ç–∞', help='—Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å–µ–∫—Ç—ã –∫—Ä–æ–≤–∞–≤–æ–π –ú–µ—Ä–∏')
    async def sekta(self, ctx):
        main = get_members_by_role(ctx, name='–í–µ—Ä—Ö–æ–≤–Ω–∞—è –∂—Ä–∏—Ü–∞')
        zam = get_members_by_role(ctx, name='–í–µ—Ä—Ö–æ–≤–Ω—ã–π –∂—Ä–µ—Ü')
        sekta = get_members_by_role(ctx, name='–°–µ–∫—Ç–∞–Ω—Ç')

        msg = ''
        for role in [main, zam, sekta]:
            members = role.members
            if members:
                m = '\n'.join([role.members[i].display_name for i in range(len(role.members))])
                msg += f"{role.role}:\n{m}\n"
        await ctx.send(box(msg))

    @commands.command(name='–≤—Å–µ–∫—Ç—É', help='–ø—Ä–∏–Ω—è—Ç—å –≤ —Å–µ–∫—Ç—É –±–µ—Å–ø—Ä–µ–¥–µ–ª–∞')
    async def join_sekta(self, ctx, member: discord.Member = None):
        if member is None:
            member = ctx.author
        all_roles = ctx.guild.roles
        sekta = get(all_roles, name='–°–µ–∫—Ç–∞–Ω—Ç')
        if is_traus(ctx, member):
            return
        await ctx.send(box(f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–µ–∫—Ç—É, {member.display_name}!'))
        await set_permissions(channels.SEKTA, member, read_messages=True, send_messages=True)
        await member.add_roles(sekta)

    @commands.command(name='–∏–∑—Å–µ–∫—Ç—ã', help='–≤—ã–π—Ç–∏ –∏–∑ —ç—Ç–æ–π –∫—Ä–∏–ø–æ–≤–æ–π —Å–µ–∫—Ç—ã')
    async def exit_sekta(self, ctx):
        all_roles = ctx.guild.roles
        sekta = get(all_roles, name='–°–µ–∫—Ç–∞–Ω—Ç')
        if sekta in ctx.author.roles:
            await ctx.author.remove_roles(sekta)
            await send_by_bot(ctx, file=discord.File('files/media/sekta.jpg'), delete=True)
            await set_permissions(channels.SEKTA, ctx.author, send_messages=False)

    @commands.command(help='ToT')
    async def tavern(self, ctx):
        msg = await send_by_bot(ctx, tavern_emoji, delete=True)
        for emoji in ('üá¥', 'üá´', 'üáπ', 'üá¶', 'üá±', 'üá™', 'üá∏'):
            await msg.add_reaction(emoji)

    @commands.command(name='–ø–µ—Ä–µ–∏–≥—Ä–∞–ª', help='–ü–µ—Ä–µ–∏–≥—Ä–∞–ª –∏ —É–Ω–∏—á—Ç–æ–∂–∏–ª')
    async def meme_win(self, ctx, member: discord.Member = None):
        await ctx.message.delete()
        author = await get_renferenced_author(ctx)
        member = member or author
        if member:
            text = f"{ctx.author.mention} –ø–µ—Ä–µ–∏–≥—Ä–∞–ª –∏ —É–Ω–∏—á—Ç–æ–∂–∏–ª {member.mention}"
            embed = discord.Embed()
            embed.set_image(url=find_gif(search_term='–ø–µ—Ä–µ–∏–≥—Ä–∞–ª', limit=1))
            embed.add_field(name=f"–î—É–º–∞–ª–∏ —è –≤–∞—Å –Ω–µ –ø–µ—Ä–µ–∏–≥—Ä–∞—é?", value=text)
            await ctx.send(embed=embed, reference=ctx.message.reference)

    @commands.command(name='–ø—è—Ç—å', help='–î–∞—Ç—å –ø—è—Ç—å')
    async def five(self, ctx, member: discord.Member = None):
        await ctx.message.delete()
        author = await get_renferenced_author(ctx)
        member = member or author
        if member:
            text = f"{ctx.author.mention} –¥–∞—ë—Ç –ø—è—Ç—å {member.mention}!"
            embed = discord.Embed(description=text)
            embed.set_image(url=find_gif(search_term='highfive', limit=50))
            await ctx.send(embed=embed, reference=ctx.message.reference)

    @commands.command(name='—á–æ–∫', help='–ß–æ–∫–Ω—É—Ç—å—Å—è')
    async def chin(self, ctx, member: discord.Member = None):
        await ctx.message.delete()
        author = await get_renferenced_author(ctx)
        member = member or author
        if member:
            text = f"{ctx.author.mention} —á–æ–∫–∞–µ—Ç—Å—è —Å {member.mention}!"
            embed = discord.Embed(description=text)
            embed.set_image(url=find_gif(search_term='cheers', limit=10))
            await ctx.send(embed=embed, reference=ctx.message.reference)

    @commands.command(name='—Ñ–∞–∫—Ç', help='—Ä–∞–Ω–¥–æ–º–Ω—ã–π —Ñ–∞–∫—Ç')
    async def fact(self, ctx):
        url = 'https://randstuff.ru/fact/'
        pattern = r'(?<=–§–∞–∫—Ç:</h1><div id="fact"><table class="text"><tr><td>).*(?=</td>)'
        resp = requests.get(url)
        text = re.findall(pattern=pattern, string=resp.content.decode('utf8'))[0]
        await send_by_bot(ctx, box(text), delete=True)

    @commands.command(help='–†–û–¶–ö!')
    async def rockon(self, ctx):
        search_term = 'rockon'
        limit = 20
        message = await quote_renferenced_message(ctx, limit=50)
        await send_by_bot(ctx, message, find_gif(search_term, limit), delete=True)

    @commands.command(name='–≥–æ—Ä–∏—Ç', help='–≥–æ—Ä–∏–∏–∏–∏–∏—Ç!')
    async def fire(self, ctx):
        search_term = 'ass on fire'
        limit = 5
        message = await quote_renferenced_message(ctx, limit=50)
        await send_by_bot(ctx, message, find_gif(search_term, limit), delete=True)

    @commands.command(name='–ª–æ–≥–æ', help='–ª–æ–≥–æ –≥–∏–ª—å–¥–∏–∏')
    async def logo(self, ctx):
        await ctx.send(ctx.guild.icon_url)

    @commands.command(name='–≥—Ü', help='–ø–æ–∑–¥—Ä–∞–≤–∏—Ç—å')
    async def gc(self, ctx):
        message = await quote_renferenced_message(ctx)
        await send_by_bot(ctx, message, file=discord.File('files/media/gc.png'), delete=True)

    @commands.command(name='—Å—Ç–∞—Ç', help='—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∞–≤–µ—Ä–Ω–µ')
    async def stat(self, ctx):
        await ctx.message.delete()
        start_time = datetime.strptime("26.04.2021", "%d.%m.%Y")
        current_time = datetime.utcnow() + timedelta(hours=3)

        beer = get_value('beer')
        ale = get_value('ale')
        wine = get_value('wine')
        vodka = get_value('vodka')
        honey = get_value('honey')
        slap = get_value('slap')

        msg = f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∞–≤–µ—Ä–Ω–µ –∑–∞ {(current_time - start_time).days} –¥–Ω–µ–π.\n" \
              f"–í—ã–ø–∏—Ç–æ:\n" \
              f"{beer} –∫—Ä—É–∂–µ–∫ –ø–∏–≤–∞\n" \
              f"{ale} –ª–∏—Ç—Ä–æ–≤ —ç–ª—è\n" \
              f"{honey} –±–æ—á–µ–∫ –º–µ–¥–æ–≤—É—Ö–∏\n" \
              f"{wine} –±–æ–∫–∞–ª–æ–≤ –≤–∏–Ω–∞\n" \
              f"{vodka} –±—É—Ç—ã–ª–æ–∫ –≤–æ–¥–∫–∏\n\n" \
              f"–í—ã–¥–∞–Ω–æ {slap} —à–∞–ø–∞–ª–∞—Ö–æ–≤."
        await ctx.send(box(msg))

    @commands.command(name='—Å—Ç–æ–ª', help='–ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—å —Å—Ç–æ–ª')
    async def table(self, ctx):
        if table_turn_over[ctx.channel.id]:
            await send_by_bot(ctx, '(‚ïÆ¬∞-¬∞)‚î≥‚î≥', delete=True)
            table_turn_over[ctx.channel.id] = False
        else:
            await send_by_bot(ctx, '( ‚ïØ¬∞‚ñ°¬∞)‚ïØ‚îª‚îª', delete=True)
            table_turn_over[ctx.channel.id] = True

    @commands.command(pass_context=True, name='–≤–∫–ª–∞–¥', help='–£–∑–Ω–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —á–ª–µ–Ω–æ–≤ –≥–∏–ª—å–¥–∏–∏')
    @commands.has_role("–ì–ª–∞–≤–∞ –≥–∏")
    async def income(self, ctx):
        all_income = get_reputation_income()
        msg = '–í–∫–ª–∞–¥ –≤ –≥–∏–ª—å–¥–∏—é –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è:\n'
        for name in sorted(all_income, key=all_income.get, reverse=True):
            msg += f'\n{name} {all_income[name]}'
        await ctx.send(box(msg))

    @commands.command(pass_context=True, name='–ø–æ–±–µ–¥–∏—Ç–µ–ª—å', help='–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –∫–æ–Ω–∫—É—Ä—Å–∞')
    @commands.has_role("–ì–ª–∞–≤–∞ –≥–∏")
    async def winner(self, ctx, necessary_points: int = 500):
        all_roles = ctx.guild.roles
        tot = get(all_roles, id=roles.TOT)

        all_income = get_reputation_income()
        winners = [name for name in all_income if all_income[name] > necessary_points]
        winner = winners[random.randint(0, len(winners)-1)]

        await ctx.send(box(f"–ù–∞—á–∞–ª–æ —Ä–∞—Å—Å—á–µ—Ç–∞..."))
        sleep(10)
        await ctx.send(box(f"–û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ —Å–ø—É—Ç–Ω–∏–∫–∞..."))
        sleep(10)
        await ctx.send(box(f"–≠–Ω–∏–∫–∏ –±–µ–Ω–∏–∫–∏ –µ–ª–∏ –≤–∞—Ä–µ–Ω–∏–∫–∏...."))
        sleep(10)
        await ctx.send(box(f"—Ä–∞–∑ –¥–≤–∞ —Ç—Ä–∏ —á–µ—Ç—ã—Ä–µ –ø—è—Ç—å, –ø–æ–±–µ–¥–∏—Ç–µ–ª—å:"))
        sleep(10)
        await ctx.send(box(f"—Ö–º–º–º–º–º..."))
        sleep(10)
        await ctx.send(f"{tot.mention} –î—Ä—É–∑—å—è!")
        await ctx.send(box(f"{winner} –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –ø–æ–±–µ–¥–æ–π –≤ –∫–æ–Ω–∫—É—Ä—Å–µ!!!! –¢–≤–æ–π –ø—Ä–∏–∑-—Å–∫–∞–π–ø–∞—Å—Å –∏–ª–∏ –µ–≥–æ —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç. "
                           f"–ü—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏, –º–æ–∂–µ—à—å –ø–µ—Ä–µ–¥–∞—Ç—å –ø—Ä–∏–∑ –ª—é–±–æ–º—É –¥—Ä—É–≥–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É –≥–∏–ª—å–¥–∏–∏! "
                           f"–í —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ —Å —Ç–æ–±–æ–π —Å–≤—è–∂–µ—Ç—Å—è —Å–æ–≤–µ—Ç –∏ –æ–±—Å—É–¥—è—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–¥–∞—á–∏ –Ω–∞–≥—Ä–∞–¥—ã =)"))


bot.add_cog(FunCommands())
